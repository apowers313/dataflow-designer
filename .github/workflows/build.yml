name: build

on: [push]

jobs:
  lint:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ['18']

    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install
      run: yarn install

    - name: Security Audit
      run: yarn audit

    - name: List Modules
      run: yarn list
      continue-on-error: true

    - name: Lint
      run: yarn lint

    - name: Build
      run: yarn build

  test:

    needs: lint

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        node-version: [18.x]

    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache Node Modules
      id: cache-node-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}

    - name: Install
      if: steps.cache.outputs.cache-hit != 'true'
      run: yarn install

    - name: Test
      run: yarn test

  docs:
    needs: test

    runs-on: ubuntu-latest

    steps:
    - name: Git checkout
      uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache Node Modules
      id: cache-node-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}

    - name: Install
      if: steps.cache.outputs.cache-hit != 'true'
      run: yarn install

    - name: Create Docs
      run: yarn docs

    - name: Publish Docs
      uses: JamesIves/github-pages-deploy-action@4.4.0
      with:
        folder: docs
        clean: true

  coverage:
    needs: test

    runs-on: ubuntu-latest

    steps:
    - name: Git checkout
      uses: actions/checkout@v2

    - name: Use Node.js v18
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Cache Node Modules
      id: cache-node-modules
      uses: actions/cache@v3
      with:
        path: node_modules
        key: node-modules-${{ hashFiles('package-lock.json') }}

    - name: Install
      if: steps.cache.outputs.cache-hit != 'true'
      run: yarn install

    - name: Create Coverage
      run: yarn coverage

    - name: Publish Coverage
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

